pipeline {
    agent any
    environment {
        IMAGE_NAME_PROD = 'airqo-platform-frontend'
    }
    stages {
        stage("Start"){
            steps {
                slackSend (color: '#1976d2', message: "BUILD STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
            }
        }
        stage("Checkout code") {
            steps {
                checkout scm
            }
        }
        stage("Build for Production"){
            steps {

                    echo "Docker Build"
                    sh """
                    docker build -t ${REGISTRY_URI}/${PROJECT_ID}/${IMAGE_NAME_PROD}:"latest" -f "netmanager/Dockerfile" . 
                    """
                    withCredentials([file(credentialsId: "${GCR_CONFIG}", variable: 'GC_KEY')]){
                        sh "cat '$GC_KEY' | docker login -u _json_key --password-stdin ${REGISTRY_URI}"
                        sh "gcloud auth activate-service-account --key-file='$GC_KEY'"
                        sh "gcloud auth configure-docker"
                        echo "Pushing image to GCR"
                        sh """
                        gcloud container images add-tag ${REGISTRY_URI}/${PROJECT_ID}/${IMAGE_NAME_PROD} ${REGISTRY_URI}/${PROJECT_ID}/${IMAGE_NAME_PROD}:"v${env.BUILD_NUMBER}"
                        docker push ${REGISTRY_URI}/${PROJECT_ID}/${IMAGE_NAME_PROD}:"latest"
                        """
                    }
            }
            post{
                success{
                    echo "Build and Push Successfully"
                    }
                failure{
                    echo "Build and Push Failed"
                    echo 'Service deployed successfully'
                    slackSend (color: '#FF0000', message: "FAILED TO BUILD AND PUSH IMAGE: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
                    }
            }

        }
        stage("Deploy to Production"){
            steps {
                withKubeConfig([credentialsId: "${K8S_CONFIG}"]) {
                    sh """
                    kubectl apply -f 'k8s/prod-airqo-platform-frontend.yaml'
                    kubectl rollout restart deployment/${IMAGE_NAME_PROD} -n production
                    """
                }
            }
            post{
                success{
                    echo "Successfully deployed to production"
                    slackSend (color: '#00FF00', message: "SUCCESS: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")

                }
                failure{
                    echo "Failed deploying to production"
                    slackSend (color: '#FF0000', message: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
                }
            }
        }
        stage('Final'){
            steps {
                echo 'Pipeline Completed'
                slackSend (color: '#00FF00', message: "COMPLETED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
            }
        }
    }    
}