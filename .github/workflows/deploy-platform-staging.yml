name: deploy-platform-staging

on:
  push:
  #pull_request:
    branches: ft-deploy-platform
    #types: [closed]
jobs:
  check:
    #if: github.event.pull_request.merged == 'true'
    #if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    name: Check files
    outputs:
      run_job: ${{ steps.check_files.outputs.run_job }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: check modified files
        id: check_files
        run: |
          echo "=============== list modified files ==============="
          git diff --name-only HEAD^ HEAD
          
          echo "========== check paths of modified files =========="
          git diff --name-only HEAD^ HEAD > files.txt
          while IFS= read -r file
          do
            echo $file
            if [[ $file != netmanager/* ]]; then
              echo "This modified file(s) is/are not under the 'netmanager' folder."
              echo "::set-output name=run_job::false"
              break
            else
              echo "::set-output name=run_job::true"
            fi
          done < files.txt

  build:
    name: build-push-deploy
    needs: check
    if: needs.check.outputs.run_job == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: _json_key
          password: ${{ secrets.GCR_CONFIG }}
        # run: |
        #   docker login -u _json_key --password-stdin ${{ secrets.REGISTRY_URL }}
        #   gcloud auth activate-service-account --key-file=${{ secrets.GCR_JSON_KEY }}
        #   gcloud auth configure-docker

      - name: Login to K8S
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.K8S_CONFIG }}
      
      - name: Build and Push Docker Image
        run: |
          docker build --tag ${{ secrets.REGISTRY_URL }}/${{ secrets.PROJECT_ID }}/airqo-stage-platform-frontend-test:latest ./netmanger/Dockerfile
          docker push ${{ secrets.REGISTRY_URL }}/${{ secrets.PROJECT_ID }}/airqo-stage-platform-frontend-test:latest
      - name: Deploy to K8S
        run: |
          kubectl apply -f ./k8s/stage-airqo-platform-frontend.yaml
          kubectl rollout restart deployment/airqo-stage-platform-frontend -n staging

            
